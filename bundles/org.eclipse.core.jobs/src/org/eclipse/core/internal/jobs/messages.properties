###############################################################################
#  Copyright (c) 2000, 2016 IBM Corporation and others.
#  All rights reserved. This program and the accompanying materials
#  are made available under the terms of the Eclipse Public License v1.0
#  which accompanies this distribution, and is available at
#  http://www.eclipse.org/legal/epl-v10.html
# 
#  Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################
### Runtime jobs plugin messages

### Job Manager and Locks
jobs_blocked0=The user operation is waiting for background work to complete.
jobs_blocked1=The user operation is waiting for \"{0}\" to complete.
jobs_internalError=An internal error occurred during: \"{0}\".
jobs_waitFamSub={0} operations remaining.
jobs_waitFamSubOne={0} operation remaining.

### metadata
meta_pluginProblems = Problems occurred when invoking code from plug-in: \"{0}\".

### Job cancelation monitor
cancelability_monitor_waitedTooLong=Job \"{0}\" has waited up to {1} between two cancelation checks. It should do it more frequently to respond quickly to user cancelation requests. IProgressMonitor.isCanceled() hit count: {2}. Job execution time: {3}.
cancelability_monitor_noCancelationCheck=Job \"{0}\" did not do any cancelation checks. It cannot respond to user cancelation requests. IProgressMonitor.isCanceled() hit count: {1}. Job execution time: {2}.
cancelability_monitor_sampledStackTraces=Sampled stack traces of calls to IProgressMonitor.isCanceled. Time between the two calls: {0}.
cancelability_monitor_initialStackTrace=Last cancellation check before a long gap.
cancelability_monitor_secondStackTrace=First cancellation check after a long gap.
cancelability_monitor_abbrevUnitSeconds=s
