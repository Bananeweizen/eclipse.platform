<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.debug.ui">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.debug.ui" id="debugViewContentProviders" name="Debug View Content Providers"/>
      </appInfo>
      <documentation>
         This extension point allows a custom content provider to be contributed for the debug view. A default content provider is provided by the debug platform, but clients may override the default content provider to customize the presentation in the debug view based on an enablement expression. Enablement is evaluated for each element in the debug view when retrieving content for that element.
      </documentation>
   </annotation>

   <include schemaLocation="schema://org.eclipse.core.expressions/schema/expressionLanguage.exsd"/>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="debugViewContentProvider" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified identifier of the target extension point
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  an optional identifier of the extension instance
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  an optional name of the extension instance
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="debugViewContentProvider">
      <complexType>
         <sequence>
            <element ref="enablement"/>
         </sequence>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  the fully qualified name of a Java class that implements &lt;code&gt;org.eclipse.jface.viewers.ITreeContentProvider&lt;/code&gt;.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  unique identifier for this debug view content provider
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         3.1
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         The following is an example of a debug view content provider extension point:

&lt;p&gt;
&lt;pre&gt;
   &lt;extension point = &quot;org.eclipse.debug.ui.debugViewContentProviders&quot;&gt; 
       &lt;debugViewContentProvider
           id=&quot;com.example.JavaDebugContentProviderID&quot;
           class = &quot;com.example.JavaDebugContentProvider&quot;&gt;
           &lt;enablement&gt;
              &lt;adapt type=&quot;org.eclipse.jdt.debug.core.IJavaThread&quot;/&gt;
           &lt;/enablement&gt;
       &lt;/debugViewContentProvider&gt; 
   &lt;/extension&gt; 
&lt;/pre&gt;
&lt;/p&gt;
In the example above, the class 
&lt;samp&gt;com.example.JavaDebugContentProvider&lt;/samp&gt; will be 
used to retrieve children of debug elements with an adapter
of type
&lt;samp&gt;org.eclipse.jdt.debug.core.IJavaThread&lt;/samp&gt;.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         Value of the attribute &lt;samp&gt;class&lt;/samp&gt; must be a fully 
qualified class name of a Java class that implements 
&lt;samp&gt;org.eclipse.jface.viewers.ITreeContentProvider&lt;/samp&gt;.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         The debug platform provides a default implementation in org.eclipse.debug.ui.DefaultDebugViewContentProvider. Clients may subclass this class.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2004 IBM Corporation and others.&lt;br&gt;
All rights reserved. This program and the accompanying materials are made 
available under the terms of the Common Public License v1.0 which 
accompanies this distribution, and is available at 
&lt;a href=&quot;http://www.eclipse.org/legal/cpl-v10.html&quot;&gt;http://www.eclipse.org/legal/cpl-v10.html&lt;/a&gt;
      </documentation>
   </annotation>

</schema>
