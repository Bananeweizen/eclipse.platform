<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.debug.ui">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.debug.ui" id="breakpointContainerFactories" name="Breakpoint Container Factories"/>
      </appInfo>
      <documentation>
         This extension point provides a mechanism for contributing breakpoint container factories. A breakpoint container factory divides breakpoints up into containers based on some specific criteria. For example, a breakpoint container factory is provided to organize breakpoints by project.

Factories with the specified name will be automatically created by the Debug Platform and presented to the user as options for grouping breakpoints. The supplied delegate class, which must implement org.eclipse.debug.ui.IBreakpointContainerFactoryDelegate, will be loaded only as necessary, to avoid early plugin activation.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="breakpointContainerFactory" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="breakpointContainerFactory">
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  Unique identifier for this breakpoint container factory.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  Implementation of org.eclipse.debug.internal.ui.views.breakpoints.IBreakpointContainerFactoryDelegate
               </documentation>
               <appInfo>
                  <meta.attribute kind="java"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="label" type="string" use="required">
            <annotation>
               <documentation>
                  Optional label for this container factory which is suitable for presentation to the user.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="icon" type="string">
            <annotation>
               <documentation>
                  Path to an optional icon which can be shown for this container factory
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         3.1
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         The following is an example of an extension provided by the Debug UI plugin
&lt;pre&gt;
&lt;extension
    point=&quot;org.eclipse.debug.ui.breakpointContainerFactories&quot;&gt;
    &lt;breakpointContainerFactory
     class=&quot;org.eclipse.debug.internal.ui.views.breakpoints.BreakpointProjectContainerFactoryDelegate&quot;
     id=&quot;org.eclipse.debug.ui.breakpointProjectContainerFactory&quot;
     label=&quot;Project&quot;
     icon=&quot;icons/full/obj16/prj_obj.gif&quot;/&gt;
&lt;/extension&gt;
&lt;/pre&gt;
In the above example, the supplied factory will be included in the list of options for grouping breakpoints (&quot;Group By &gt; Project&quot;). When the breakpoints view is set to group breakpoints by project, the factory will query the given class, which implements IBreakpointContainerFactoryDelegate.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         Value of the attribute &lt;b&gt;class&lt;/b&gt; must be a fully qualified name of a Java class that implements the interface &lt;b&gt;org.eclipse.debug.ui.IBreakpointContainerFactoryDelegate&lt;/b&gt;.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2004 IBM Corporation and others.&lt;br&gt;
All rights reserved. This program and the accompanying materials are made 
available under the terms of the Common Public License v1.0 which 
accompanies this distribution, and is available at 
&lt;a href=&quot;http://www.eclipse.org/legal/cpl-v10.html&quot;&gt;http://www.eclipse.org/legal/cpl-v10.html&lt;/a&gt;
      </documentation>
   </annotation>

</schema>
