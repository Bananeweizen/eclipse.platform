<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.debug.core">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.debug.core" id="memoryRenderings" name="Rendering Extension"/>
      </appInfo>
      <documentation>
         This in an internal extension point that allows plugins to define renderings for memory blocks. This extension point is being released for internal use only in Eclipse 3.0, and may become public API in a future release. A rendering is a UI representation of a memory block.  In addition to the HEX representation created by default in the Memory View, a memory block can be presented in other formats.  For example, the raw data of a memory block can be rendered in to text and displayed as ASCII strings.  The data can also be rendered into numerical values and displayed as integer or decimal numbers.

This extension point allows plugins to define renderings suitable for their needs.  They can also define their own rendering views to display the renderings they define.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <choice>
            <element ref="rendering" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="default_renderings" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="rendering_binding" minOccurs="0" maxOccurs="unbounded"/>
         </choice>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified identifier of the target extension point
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  an optional identifier of the extension instance
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  an optional name of the extension instance
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="rendering">
      <annotation>
         <documentation>
            This element defines a rendering.  A rendering is comprised of an id, a name, optionally, a rendering factory, and a list of rendering properties.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <choice>
               <element ref="rendering_property" minOccurs="0" maxOccurs="unbounded"/>
            </choice>
         </sequence>
         <attribute name="renderingId" type="string" use="required">
            <annotation>
               <documentation>
                  Required unique identifier for the rendering.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  Required name of the rendering
               </documentation>
            </annotation>
         </attribute>
         <attribute name="renderingFactory" type="string">
            <annotation>
               <documentation>
                  Optional field for specifying a class that implements IRenderingFactory.  IRenderingFactory is for creating an IMemoryRendering object.  If this field is not defined, then a default rendering factory will be used.  MemoryRendering will be created and stored in the memory rendering manager.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="rendering_property">
      <annotation>
         <documentation>
            For specifying rendering specific properties.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="renderingId" type="string" use="required">
            <annotation>
               <documentation>
                  Rendering this property belongs to.  The rendering must be defined before the property.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  Name of the property
               </documentation>
            </annotation>
         </attribute>
         <attribute name="value" type="string" use="required">
            <annotation>
               <documentation>
                  Value of this property
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="default_renderings">
      <annotation>
         <documentation>
            Default renderings to create when an object of &quot;memoryBlockClass&quot; is created.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="memoryBlockClass" type="string" use="required">
            <annotation>
               <documentation>
                  Name of the memory block class.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="renderingIds" type="string" use="required">
            <annotation>
               <documentation>
                  List of renderings to be created when a memory block of type &quot;memboryBlockClass&quot; is created.  Sepcify rendering ids and delimit them with comma.  The rendering will not be added if its rendering id is not one of the listed valid renderings specified in rendering_binding.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="rendering_binding">
      <annotation>
         <documentation>
            Binds a memory block with a list of renderings.  Allows plugins to define a list of valid renderings for their memory blocks.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="memoryBlockClass" type="string" use="required">
            <annotation>
               <documentation>
                  Class name of the memory block to bind the renderings to.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="renderingIds" type="string" use="required">
            <annotation>
               <documentation>
                  List of renderings valid for the memory block.  Delimit rendering ids with comma.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         Eclipse 3.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2004 IBM Corporation and others.&lt;br&gt;
All rights reserved. This program and the accompanying materials are made 
available under the terms of the Common Public License v1.0 which 
accompanies this distribution, and is available at 
&lt;a href=&quot;http://www.eclipse.org/legal/cpl-v10.html&quot;&gt;http://www.eclipse.org/legal/cpl-v10.html&lt;/a&gt;
      </documentation>
   </annotation>

</schema>
