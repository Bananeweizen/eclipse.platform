package org.eclipse.ui.externaltools.internal.ant.preferences;/**********************************************************************Copyright (c) 2002 IBM Corp. and others. All rights reserved.This file is made available under the terms of the Common Public License v1.0which accompanies this distribution, and is available athttp://www.eclipse.org/legal/cpl-v10.html Contributors:**********************************************************************/import org.eclipse.jface.preference.ColorFieldEditor;import org.eclipse.jface.preference.FieldEditorPreferencePage;import org.eclipse.swt.SWT;import org.eclipse.swt.layout.GridData;import org.eclipse.swt.widgets.Composite;import org.eclipse.swt.widgets.Label;import org.eclipse.ui.IWorkbench;import org.eclipse.ui.IWorkbenchPreferencePage;import org.eclipse.ui.externaltools.internal.model.ExternalToolsPlugin;import org.eclipse.ui.externaltools.internal.model.IPreferenceConstants;/** * Preference page applicable to all external tools */public class AntConsolePreferencePage extends FieldEditorPreferencePage implements IWorkbenchPreferencePage {	public AntConsolePreferencePage() {		super(GRID);		setPreferenceStore(ExternalToolsPlugin.getDefault().getPreferenceStore());	}	/* (non-Javadoc)	 * Method declared on FieldEditorPreferencePage.	 */	public void createControl(Composite parent) {		super.createControl(parent);		// should do something here with the help..			/* FIXME		WorkbenchHelp.setHelp(			parent,			new Object[] { IAntHelpContextIds.ANT_PREFERENCE_PAGE });		*/	}		/* (non-Javadoc)	 * Method declared on FieldEditorPreferencePage.	 */	protected void createFieldEditors() {		Label label = new Label(getFieldEditorParent(), SWT.NONE);		label.setText(AntPreferencesMessages.getString("AntConsolePreferencePage.Console_text_color_settings__1")); //$NON-NLS-1$		GridData gd = new GridData(GridData.FILL_HORIZONTAL);		gd.horizontalSpan = 3;		label.setLayoutData(gd);				ColorFieldEditor errOut =			new ColorFieldEditor(				IPreferenceConstants.CONSOLE_ERROR_RGB,				AntPreferencesMessages.getString("AntConsolePreferencePage.&Error__2"), //$NON-NLS-1$				getFieldEditorParent());		ColorFieldEditor warnOut =			new ColorFieldEditor(				IPreferenceConstants.CONSOLE_WARNING_RGB,				AntPreferencesMessages.getString("AntConsolePreferencePage.&Warning__3"), //$NON-NLS-1$				getFieldEditorParent());		ColorFieldEditor infoOut =			new ColorFieldEditor(				IPreferenceConstants.CONSOLE_INFO_RGB,				AntPreferencesMessages.getString("AntConsolePreferencePage.I&nformation__4"), //$NON-NLS-1$				getFieldEditorParent());		ColorFieldEditor verbOut =			new ColorFieldEditor(				IPreferenceConstants.CONSOLE_VERBOSE_RGB,				AntPreferencesMessages.getString("AntConsolePreferencePage.Ve&rbose__5"), //$NON-NLS-1$				getFieldEditorParent());		ColorFieldEditor debugOut =			new ColorFieldEditor(				IPreferenceConstants.CONSOLE_DEBUG_RGB,				AntPreferencesMessages.getString("AntConsolePreferencePage.Deb&ug__6"), //$NON-NLS-1$				getFieldEditorParent());		addField(errOut);		addField(warnOut);		addField(infoOut);		addField(verbOut);		addField(debugOut);	}		/* (non-Javadoc)	 * Method declared on IWorkbenchPreferencePage.	 */	public void init(IWorkbench workbench) {	}}